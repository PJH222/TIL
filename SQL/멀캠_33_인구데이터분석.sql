CREATE DATABASE analyze_db;

create table analyze_db.TB_POPLTN_DATA
(
    ADMINIST_ZONE             text   null,
    TOT_POPLTN_CO             bigint null,
    AGE_SCTN_POPLTN_CO        bigint null,
    POPLTN_CO_0_9             bigint null,
    POPLTN_CO_10_19           bigint null,
    POPLTN_CO_20_29           bigint null,
    POPLTN_CO_30_39           bigint null,
    POPLTN_CO_40_49           bigint null,
    POPLTN_CO_50_59           bigint null,
    POPLTN_CO_60_69           bigint null,
    POPLTN_CO_70_79           bigint null,
    POPLTN_CO_80_89           bigint null,
    POPLTN_CO_90_99           bigint null,
    POPLTN_CO_100             bigint null,
    MALE_TOT_POPLTN_CO        bigint null,
    MALE_AGE_SCTN_POPLTN_CO   bigint null,
    MALE_POPLTN_CO_0_9        bigint null,
    MALE_POPLTN_CO_10_19      bigint null,
    MALE_POPLTN_CO_20_29      bigint null,
    MALE_POPLTN_CO_30_39      bigint null,
    MALE_POPLTN_CO_40_49      bigint null,
    MALE_POPLTN_CO_50_59      bigint null,
    MALE_POPLTN_CO_60_69      bigint null,
    MALE_POPLTN_CO_70_79      bigint null,
    MALE_POPLTN_CO_80_89      bigint null,
    MALE_POPLTN_CO_90_99      bigint null,
    MALE_POPLTN_CO_100        bigint null,
    FEMALE_TOT_POPLTN_CO      bigint null,
    FEMALE_AGE_SCTN_POPLTN_CO bigint null,
    FEMALE_POPLTN_CO_0_9      bigint null,
    FEMALE_POPLTN_CO_10_19    bigint null,
    FEMALE_POPLTN_CO_20_29    bigint null,
    FEMALE_POPLTN_CO_30_39    bigint null,
    FEMALE_POPLTN_CO_40_49    bigint null,
    FEMALE_POPLTN_CO_50_59    bigint null,
    FEMALE_POPLTN_CO_60_69    bigint null,
    FEMALE_POPLTN_CO_70_79    bigint null,
    FEMALE_POPLTN_CO_80_89    bigint null,
    FEMALE_POPLTN_CO_90_99    bigint null,
    FEMALE_POPLTN_CO_100      bigint null
);

USE analyze_db;

create table analyze_db.TB_PBTRNSP_DATA
(
    DE                          text   null,
    HO_LN                       text   null,
    STATN_NO                    bigint null,
    STATN_NM                    text   null,
    FROM_04_HOUR_TO_05_HOUR_TK  bigint null,
    FROM_04_HOUR_TO_05_HOUR_GFF bigint null,
    FROM_05_HOUR_TO_06_HOUR_TK  bigint null,
    FROM_05_HOUR_TO_06_HOUR_GFF bigint null,
    FROM_06_HOUR_TO_07_HOUR_TK  bigint null,
    FROM_06_HOUR_TO_07_HOUR_GFF bigint null,
    FROM_07_HOUR_TO_08_HOUR_TK  bigint null,
    FROM_07_HOUR_TO_08_HOUR_GFF bigint null,
    FROM_08_HOUR_TO_09_HOUR_TK  bigint null,
    FROM_08_HOUR_TO_09_HOUR_GFF bigint null,
    FROM_09_HOUR_TO_10_HOUR_TK  bigint null,
    FROM_09_HOUR_TO_10_HOUR_GFF bigint null,
    FROM_10_HOUR_TO_11_HOUR_TK  bigint null,
    FROM_10_HOUR_TO_11_HOUR_GFF bigint null,
    FROM_11_HOUR_TO_12_HOUR_TK  bigint null,
    FROM_11_HOUR_TO_12_HOUR_GFF bigint null,
    FROM_12_HOUR_TO_13_HOUR_TK  bigint null,
    FROM_12_HOUR_TO_13_HOUR_GFF bigint null,
    FROM_13_HOUR_TO_14_HOUR_TK  bigint null,
    FROM_13_HOUR_TO_14_HOUR_GFF bigint null,
    FROM_14_HOUR_TO_15_HOUR_TK  bigint null,
    FROM_14_HOUR_TO_15_HOUR_GFF bigint null,
    FROM_15_HOUR_TO_16_HOUR_TK  bigint null,
    FROM_15_HOUR_TO_16_HOUR_GFF bigint null,
    FROM_16_HOUR_TO_17_HOUR_TK  bigint null,
    FROM_16_HOUR_TO_17_HOUR_GFF bigint null,
    FROM_17_HOUR_TO_18_HOUR_TK  bigint null,
    FROM_17_HOUR_TO_18_HOUR_GFF bigint null,
    FROM_18_HOUR_TO_19_HOUR_TK  bigint null,
    FROM_18_HOUR_TO_19_HOUR_GFF bigint null,
    FROM_19_HOUR_TO_20_HOUR_TK  bigint null,
    FROM_19_HOUR_TO_20_HOUR_GFF bigint null,
    FROM_20_HOUR_TO_21_HOUR_TK  bigint null,
    FROM_20_HOUR_TO_21_HOUR_GFF bigint null,
    FROM_21_HOUR_TO_22_HOUR_TK  bigint null,
    FROM_21_HOUR_TO_22_HOUR_GFF bigint null,
    FROM_22_HOUR_TO_23_HOUR_TK  bigint null,
    FROM_22_HOUR_TO_23_HOUR_GFF bigint null,
    FROM_23_HOUR_TO_24_HOUR_TK  bigint null,
    FROM_23_HOUR_TO_24_HOUR_GFF bigint null,
    FROM_24_HOUR_TO_01_HOUR_TK  bigint null,
    FROM_24_HOUR_TO_01_HOUR_GFF bigint null,
    FROM_01_HOUR_TO_02_HOUR_TK  bigint null,
    FROM_01_HOUR_TO_02_HOUR_GFF bigint null,
    FROM_02_HOUR_TO_03_HOUR_TK  bigint null,
    FROM_02_HOUR_TO_03_HOUR_GFF bigint null,
    FROM_03_HOUR_TO_04_HOUR_TK  bigint null,
    FROM_03_HOUR_TO_04_HOUR_GFF bigint null,
    WORK_DT                     text   null
);

USE analyze_db;
DESC TB_POPLTN_DATA;
DESC TB_PBTRNSP_DATA;

SELECT * FROM TB_POPLTN_DATA;
SELECT * FROM TB_PBTRNSP_DATA;

create table analyze_db.TB_POPLTN
(
    ADMINIST_ZONE_NO varchar(10)  not null,
    ADMINIST_ZONE_NM varchar(150) null,
    STD_MT           varchar(6)   not null,
    POPLTN_SE_CD     varchar(1)   not null,
    AGRDE_SE_CD      varchar(3)   not null,
    POPLTN_CNT       int          null,
    primary key (ADMINIST_ZONE_NO, STD_MT, POPLTN_SE_CD, AGRDE_SE_CD)
);

INSERT INTO TB_POPLTN
SELECT A.ADMINIST_ZONE_NO, A.ADMINIST_ZONE_NM, A.STD_MT
     , CASE WHEN LVL1 = 1 THEN 'M' WHEN LVL1 = 2 THEN 'F' WHEN LVL1 = 3 THEN 'T' END AS POPLTN_SE_CD
     , CASE WHEN LVL2 = 1  THEN '000' WHEN LVL2 = 2  THEN '010' WHEN LVL2 = 3  THEN '020'
            WHEN LVL2 = 4  THEN '030' WHEN LVL2 = 5  THEN '040' WHEN LVL2 = 6  THEN '050'
            WHEN LVL2 = 7  THEN '060' WHEN LVL2 = 8  THEN '070' WHEN LVL2 = 9  THEN '080'
            WHEN LVL2 = 10 THEN '090' WHEN LVL2 = 11 THEN '100'
       END AS AGRDE_SE_CD
     , CASE WHEN LVL1 = 1 AND LVL2 = 1  THEN MALE_POPLTN_CO_0_9     WHEN LVL1 = 1 AND LVL2 = 2  THEN MALE_POPLTN_CO_10_19
            WHEN LVL1 = 1 AND LVL2 = 3  THEN MALE_POPLTN_CO_20_29   WHEN LVL1 = 1 AND LVL2 = 4  THEN MALE_POPLTN_CO_30_39
            WHEN LVL1 = 1 AND LVL2 = 5  THEN MALE_POPLTN_CO_40_49   WHEN LVL1 = 1 AND LVL2 = 6  THEN MALE_POPLTN_CO_50_59
            WHEN LVL1 = 1 AND LVL2 = 7  THEN MALE_POPLTN_CO_60_69   WHEN LVL1 = 1 AND LVL2 = 8  THEN MALE_POPLTN_CO_70_79
            WHEN LVL1 = 1 AND LVL2 = 9  THEN MALE_POPLTN_CO_80_89   WHEN LVL1 = 1 AND LVL2 = 10 THEN MALE_POPLTN_CO_90_99
            WHEN LVL1 = 1 AND LVL2 = 11 THEN MALE_POPLTN_CO_100     WHEN LVL1 = 2 AND LVL2 = 1  THEN FEMALE_POPLTN_CO_0_9
            WHEN LVL1 = 2 AND LVL2 = 2  THEN FEMALE_POPLTN_CO_10_19 WHEN LVL1 = 2 AND LVL2 = 3  THEN FEMALE_POPLTN_CO_20_29
            WHEN LVL1 = 2 AND LVL2 = 4  THEN FEMALE_POPLTN_CO_30_39 WHEN LVL1 = 2 AND LVL2 = 5  THEN FEMALE_POPLTN_CO_40_49
            WHEN LVL1 = 2 AND LVL2 = 6  THEN FEMALE_POPLTN_CO_50_59 WHEN LVL1 = 2 AND LVL2 = 7  THEN FEMALE_POPLTN_CO_60_69
            WHEN LVL1 = 2 AND LVL2 = 8  THEN FEMALE_POPLTN_CO_70_79 WHEN LVL1 = 2 AND LVL2 = 9  THEN FEMALE_POPLTN_CO_80_89
            WHEN LVL1 = 2 AND LVL2 = 10 THEN FEMALE_POPLTN_CO_90_99 WHEN LVL1 = 2 AND LVL2 = 11 THEN FEMALE_POPLTN_CO_100
            WHEN LVL1 = 3 AND LVL2 = 1  THEN POPLTN_CO_0_9          WHEN LVL1 = 3 AND LVL2 = 2  THEN POPLTN_CO_10_19
            WHEN LVL1 = 3 AND LVL2 = 3  THEN POPLTN_CO_20_29        WHEN LVL1 = 3 AND LVL2 = 4  THEN POPLTN_CO_30_39
            WHEN LVL1 = 3 AND LVL2 = 5  THEN POPLTN_CO_40_49        WHEN LVL1 = 3 AND LVL2 = 6  THEN POPLTN_CO_50_59
            WHEN LVL1 = 3 AND LVL2 = 7  THEN POPLTN_CO_60_69        WHEN LVL1 = 3 AND LVL2 = 8  THEN POPLTN_CO_70_79
            WHEN LVL1 = 3 AND LVL2 = 9  THEN POPLTN_CO_80_89        WHEN LVL1 = 3 AND LVL2 = 10 THEN POPLTN_CO_90_99
            WHEN LVL1 = 3 AND LVL2 = 11 THEN POPLTN_CO_100 END AS POPLTN_CNT
  FROM
     (
      SELECT SUBSTR(ADMINIST_ZONE, INSTR(ADMINIST_ZONE, '(') + 1, 10) AS ADMINIST_ZONE_NO
           , SUBSTR(ADMINIST_ZONE, 1, INSTR(ADMINIST_ZONE, '(')-1) AS ADMINIST_ZONE_NM,
             '202304' AS STD_MT
           , MALE_POPLTN_CO_0_9    , MALE_POPLTN_CO_10_19  , MALE_POPLTN_CO_20_29
           , MALE_POPLTN_CO_30_39  , MALE_POPLTN_CO_40_49  , MALE_POPLTN_CO_50_59
           , MALE_POPLTN_CO_60_69  , MALE_POPLTN_CO_70_79  , MALE_POPLTN_CO_80_89  , MALE_POPLTN_CO_90_99  , MALE_POPLTN_CO_100
           , FEMALE_POPLTN_CO_0_9  , FEMALE_POPLTN_CO_10_19, FEMALE_POPLTN_CO_20_29
           , FEMALE_POPLTN_CO_30_39, FEMALE_POPLTN_CO_40_49, FEMALE_POPLTN_CO_50_59
           , FEMALE_POPLTN_CO_60_69, FEMALE_POPLTN_CO_70_79, FEMALE_POPLTN_CO_80_89, FEMALE_POPLTN_CO_90_99, FEMALE_POPLTN_CO_100
           , POPLTN_CO_0_9         , POPLTN_CO_10_19, POPLTN_CO_20_29
           , POPLTN_CO_30_39       , POPLTN_CO_40_49, POPLTN_CO_50_59
           , POPLTN_CO_60_69       , POPLTN_CO_70_79, POPLTN_CO_80_89, POPLTN_CO_90_99, POPLTN_CO_100
           , LVL1, LVL2
        FROM TB_POPLTN_DATA,
             (SELECT (tmp1.idx) AS LVL1 FROM (SELECT 1 as idx UNION SELECT 2 UNION SELECT 3) tmp1) LVL1,
             (SELECT (tmp2.idx) AS LVL2 FROM (SELECT 1 as idx UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11) tmp2) LVL2
     ) A ;

SELECT (tmp1.idx) AS LVL1 FROM (SELECT 1 as idx UNION SELECT 2 UNION SELECT 3) tmp1;
SELECT (tmp2.idx) AS LVL2 FROM (SELECT 1 as idx UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11) tmp2;
SELECT * FROM TB_POPLTN_DATA;
SELECT * FROM TB_POPLTN;


-- 2023년 4월 기준 전국 주요 시/도의 연령대별 인구수 합계를 구한다.
SELECT AGRDE_SE_CD,
       SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
FROM TB_POPLTN
WHERE STD_MT = '202304'
  AND ADMINIST_ZONE_NO LIKE '__00000000'
  AND POPLTN_SE_CD = 'T'
GROUP BY AGRDE_SE_CD
ORDER BY AGRDE_SE_CD;

-- 2023년 4월 기준 전국 주요 시/도의 연령대별 인구수 합계를 구하고, 연령대별 인구 비율 구하기
SELECT
    A.AGRDE_SE_CD,
    A.AGRDE_POPLTN_CNT,
    SUM(A.AGRDE_POPLTN_CNT) OVER() AS SUM_AGRDE_POPLTN_CNT,
    A.AGRDE_POPLTN_CNT / SUM(A.AGRDE_POPLTN_CNT) OVER() AS AGRDE_POPLTN_RATE
FROM (
        SELECT AGRDE_SE_CD,
               SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
        FROM TB_POPLTN
        WHERE STD_MT = '202304'
          AND ADMINIST_ZONE_NO LIKE '__00000000'
          AND POPLTN_SE_CD = 'T'
        GROUP BY AGRDE_SE_CD
        ORDER BY AGRDE_SE_CD ) AS A;

-- 서브쿼리 대신에 WITH ~ AS 구문 사용하기
-- WITH ~ AS 구문 : 서브쿼리에서 조회할 결과를 미리 임시 테이블 형식으로 만들어 놓는 방법
--   임시 테이블이기 때문에 1회성. 한번 사용되면 사라진다. VIEW와는 다르다!

WITH TEMP_AGRDE_POPLTN_CNT AS (
    SELECT AGRDE_SE_CD,
       SUM(POPLTN_CNT) AS AGRDE_POPLTN_CNT
    FROM TB_POPLTN
    WHERE STD_MT = '202304'
      AND ADMINIST_ZONE_NO LIKE '__00000000'
      AND POPLTN_SE_CD = 'T'
    GROUP BY AGRDE_SE_CD
    ORDER BY AGRDE_SE_CD
)
SELECT
    A.AGRDE_SE_CD,
    A.AGRDE_POPLTN_CNT,
    SUM(A.AGRDE_POPLTN_CNT) OVER() AS SUM_AGRDE_POPLTN_CNT,
    A.AGRDE_POPLTN_CNT / SUM(A.AGRDE_POPLTN_CNT) OVER() AS AGRDE_POPLTN_RATE

FROM TEMP_AGRDE_POPLTN_CNT A;

-- 2023년 4월 기준 전국 주요 시/도의 성별 인구수 합계 구하기.
SELECT
    POPLTN_SE_CD,
    SUM(POPLTN_CNT) AS SE_POPLTN_CNT
FROM TB_POPLTN
WHERE ADMINIST_ZONE_NO LIKE '__00000000'
  AND STD_MT='202304'
  AND POPLTN_SE_CD IN ('M', 'F')
GROUP BY POPLTN_SE_CD;

-- 2023년 04월 기준 전국의 성별 인구수 합계를 구하여 남성/여성 비율을 구한다.

-- 피봇 테이블
SELECT
    POPLTN_SE_CD,
    CASE WHEN POPLTN_SE_CD='M' THEN SUM(POPLTN_CNT) ELSE 0 END AS MALE_POPLTN_CNT,
    CASE WHEN POPLTN_SE_CD='F' THEN SUM(POPLTN_CNT) ELSE 0 END AS FEMALE_POPLTN_CNT
FROM TB_POPLTN
WHERE ADMINIST_ZONE_NO LIKE '__00000000'
  AND STD_MT='202304'
  AND POPLTN_SE_CD IN ('M', 'F')
GROUP BY POPLTN_SE_CD;


WITH TEMP_SE_POPLTN_CNT AS (
    SELECT
        POPLTN_SE_CD,
        CASE WHEN POPLTN_SE_CD='M' THEN SUM(POPLTN_CNT) ELSE 0 END AS MALE_POPLTN_CNT,
        CASE WHEN POPLTN_SE_CD='F' THEN SUM(POPLTN_CNT) ELSE 0 END AS FEMALE_POPLTN_CNT
    FROM TB_POPLTN
    WHERE ADMINIST_ZONE_NO LIKE '__00000000'
      AND STD_MT='202304'
      AND POPLTN_SE_CD IN ('M', 'F')
    GROUP BY POPLTN_SE_CD
), TEMP_PIVOT_POPLTN_CNT AS(
    SELECT MAX(MALE_POPLTN_CNT) AS MALE_POPLTN_CNT,
           MAX(FEMALE_POPLTN_CNT) AS FEMALE_POPLTN_CNT
    FROM TEMP_SE_POPLTN_CNT)

SELECT
    MALE_POPLTN_CNT,
    FEMALE_POPLTN_CNT,
    MALE_POPLTN_CNT / FEMALE_POPLTN_CNT AS "남성/여성 비율",
    MALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) AS "전체인구수대비남성비율",
    FEMALE_POPLTN_CNT / (MALE_POPLTN_CNT + FEMALE_POPLTN_CNT) AS "전체인구수대비여성비율"
FROM TEMP_PIVOT_POPLTN_CNT;

-- 2023년 04월 기준 전국의 읍/면/동의 인구수 조회한다.
SELECT
    AGRDE_SE_CD,
    ADMINIST_ZONE_NO,
    ADMINIST_ZONE_NM,
    POPLTN_CNT
FROM TB_POPLTN
WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
  AND POPLTN_SE_CD = 'T'
  AND STD_MT = '202304'
  AND POPLTN_CNT > 0
ORDER BY POPLTN_CNT DESC;

-- 2023년 04월 기준 전국의 읍/면/동의 인구수를 조회 후 연령대별 인구가 가장 많은 지역을 조회한다.
WITH TEMP_EMD_POPLTN_CNT AS (
    SELECT
        AGRDE_SE_CD,
        ADMINIST_ZONE_NO,
        ADMINIST_ZONE_NM,
        POPLTN_CNT
    FROM TB_POPLTN
    WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
      AND POPLTN_SE_CD = 'T'
      AND STD_MT = '202304'
      AND POPLTN_CNT > 0
    ORDER BY POPLTN_CNT DESC),
TEMP_AGRDE_POPLTN_RANK AS (
    SELECT
        AGRDE_SE_CD,
        ADMINIST_ZONE_NO,
        ADMINIST_ZONE_NM,
        POPLTN_CNT,
        RANK() OVER(PARTITION BY AGRDE_SE_CD ORDER BY POPLTN_CNT DESC) AS POPLTN_RANK
    FROM TEMP_EMD_POPLTN_CNT )
SELECT
    AGRDE_SE_CD, ADMINIST_ZONE_NO, ADMINIST_ZONE_NM, POPLTN_CNT
FROM TEMP_AGRDE_POPLTN_RANK
WHERE POPLTN_RANK = 1
ORDER BY AGRDE_SE_CD;



-- 연령대 별 인구 비율이 가장 높은 지역 찾기
-- 2023년 04월 기준 전국의 각 지역의 연령대별 인구수 비율이 가장 높은 지역을 찾는다.

WITH TEMP_EMD_POPLTN_CNT AS(SELECT
    AGRDE_SE_CD,
    ADMINIST_ZONE_NO,
    ADMINIST_ZONE_NM,
    POPLTN_CNT
FROM TB_POPLTN
WHERE ADMINIST_ZONE_NO NOT LIKE '_____00000'
  AND POPLTN_SE_CD = 'T'
ORDER BY POPLTN_CNT DESC),

TEMP_AGRDE_RATE AS (
SELECT AGRDE_SE_CD,
       ADMINIST_ZONE_NO,
       ADMINIST_ZONE_NM,
       POPLTN_CNT,
       (POPLTN_CNT / SUM(POPLTN_CNT) OVER(PARTITION BY ADMINIST_ZONE_NO)) * 100 AS "지역별연령대비율"
FROM TEMP_EMD_POPLTN_CNT),
TEMP_AGRDE_RATE_RANK AS (
SELECT AGRDE_SE_CD,
       ADMINIST_ZONE_NO,
       ADMINIST_ZONE_NM,
       POPLTN_CNT,
       지역별연령대비율,
       RANK() OVER (PARTITION BY AGRDE_SE_CD ORDER BY 지역별연령대비율 DESC) AS POPLTN_RATE_RANK
FROM TEMP_AGRDE_RATE)
SELECT
    AGRDE_SE_CD, ADMINIST_ZONE_NO, ADMINIST_ZONE_NM, POPLTN_CNT, 지역별연령대비율
FROM TEMP_AGRDE_RATE_RANK
WHERE POPLTN_RATE_RANK = 1
ORDER BY AGRDE_SE_CD;